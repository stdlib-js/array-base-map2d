{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/assign.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a function to elements in a two-dimensional nested input array and assigns results to elements in a new two-dimensional nested output array.\n*\n* @param {ArrayLikeObject<Collection>} x - input nested array\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {Function} fcn - function to apply\n* @param {*} [thisArg] - function execution context\n* @returns {Array<Array>} output array\n*\n* @example\n* var ones2d = require( '@stdlib/array-base-ones2d' );\n*\n* function scale( x ) {\n*     return x * 10.0;\n* }\n*\n* var shape = [ 2, 2 ];\n*\n* var x = ones2d( shape );\n* var y = map2d( x, shape, scale );\n* // returns [ [ 10.0, 10.0 ], [ 10.0, 10.0 ] ]\n*/\nfunction map2d( x, shape, fcn, thisArg ) {\n\tvar S0;\n\tvar S1;\n\tvar i0;\n\tvar i1;\n\tvar x0;\n\tvar y0;\n\tvar y;\n\n\tS0 = shape[ 1 ];\n\tS1 = shape[ 0 ];\n\ty = [];\n\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\tx0 = x[ i1 ];\n\t\ty0 = [];\n\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\ty0.push( fcn.call( thisArg, x0[ i0 ], [ i1, i0 ], x ) );\n\t\t}\n\t\ty.push( y0 );\n\t}\n\treturn y;\n}\n\n\n// EXPORTS //\n\nmodule.exports = map2d;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a function to elements in a two-dimensional nested input array and assigns results to elements in a two-dimensional nested output array.\n*\n* ## Notes\n*\n* -   The function assumes that the input and output arrays have the same shape.\n*\n* @param {ArrayLikeObject<Collection>} x - input nested array\n* @param {ArrayLikeObject<Collection>} y - output nested array\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {Function} fcn - function to apply\n* @param {*} [thisArg] - function execution context\n* @returns {Array<Array>} output array\n*\n* @example\n* var ones2d = require( '@stdlib/array-base-ones2d' );\n* var zeros2d = require( '@stdlib/array-base-zeros2d' );\n*\n* function scale( x ) {\n*     return x * 10.0;\n* }\n*\n* var shape = [ 2, 2 ];\n*\n* var x = ones2d( shape );\n* var y = zeros2d( shape );\n*\n* var out = map2d( x, y, shape, scale );\n* // returns [ [ 10.0, 10.0 ], [ 10.0, 10.0 ] ]\n*\n* var bool = ( out === y );\n* // returns true\n*/\nfunction map2d( x, y, shape, fcn, thisArg ) {\n\tvar S0;\n\tvar S1;\n\tvar i0;\n\tvar i1;\n\tvar x0;\n\tvar y0;\n\n\tS0 = shape[ 1 ];\n\tS1 = shape[ 0 ];\n\tif ( S0 <= 0 || S1 <= 0 ) {\n\t\treturn y;\n\t}\n\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\tx0 = x[ i1 ];\n\t\ty0 = y[ i1 ];\n\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\ty0[ i0 ] = fcn.call( thisArg, x0[ i0 ], [ i1, i0 ], x );\n\t\t}\n\t}\n\treturn y;\n}\n\n\n// EXPORTS //\n\nmodule.exports = map2d;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Apply a function to elements in a two-dimensional nested input array and assign results to elements in a new two-dimensional nested output array.\n*\n* @module @stdlib/array-base-map2d\n*\n* @example\n* var ones2d = require( '@stdlib/array-base-ones2d' );\n* var map2d = require( '@stdlib/array-base-map2d' );\n*\n* function scale( x ) {\n*     return x * 10.0;\n* }\n*\n* var shape = [ 2, 2 ];\n*\n* var x = ones2d( shape );\n* var y = map2d( x, shape, scale );\n* // returns [ [ 10.0, 10.0 ], [ 10.0, 10.0 ] ]\n*\n* @example\n* var ones2d = require( '@stdlib/array-base-ones2d' );\n* var zeros2d = require( '@stdlib/array-base-zeros2d' );\n* var map2d = require( '@stdlib/array-base-map2d' );\n*\n* function scale( x ) {\n*     return x * 10.0;\n* }\n*\n* var shape = [ 2, 2 ];\n*\n* var x = ones2d( shape );\n* var y = zeros2d( shape );\n*\n* var out = map2d.assign( x, y, shape, scale );\n* // returns [ [ 10.0, 10.0 ], [ 10.0, 10.0 ] ]\n*\n* var bool = ( out === y );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar assign = require( './assign.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'assign', assign );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cA4CA,SAASC,EAAOC,EAAGC,EAAOC,EAAKC,EAAU,CACxC,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAKJ,IAHAN,EAAKH,EAAO,CAAE,EACdI,EAAKJ,EAAO,CAAE,EACdS,EAAI,CAAC,EACCH,EAAK,EAAGA,EAAKF,EAAIE,IAAO,CAG7B,IAFAC,EAAKR,EAAGO,CAAG,EACXE,EAAK,CAAC,EACAH,EAAK,EAAGA,EAAKF,EAAIE,IACtBG,EAAG,KAAMP,EAAI,KAAMC,EAASK,EAAIF,CAAG,EAAG,CAAEC,EAAID,CAAG,EAAGN,CAAE,CAAE,EAEvDU,EAAE,KAAMD,CAAG,CACZ,CACA,OAAOC,CACR,CAKAZ,EAAO,QAAUC,ICtEjB,IAAAY,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAuDA,SAASC,EAAOC,EAAGC,EAAGC,EAAOC,EAAKC,EAAU,CAC3C,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EAIJ,GAFAL,EAAKH,EAAO,CAAE,EACdI,EAAKJ,EAAO,CAAE,EACTG,GAAM,GAAKC,GAAM,EACrB,OAAOL,EAER,IAAMO,EAAK,EAAGA,EAAKF,EAAIE,IAGtB,IAFAC,EAAKT,EAAGQ,CAAG,EACXE,EAAKT,EAAGO,CAAG,EACLD,EAAK,EAAGA,EAAKF,EAAIE,IACtBG,EAAIH,CAAG,EAAIJ,EAAI,KAAMC,EAASK,EAAIF,CAAG,EAAG,CAAEC,EAAID,CAAG,EAAGP,CAAE,EAGxD,OAAOC,CACR,CAKAH,EAAO,QAAUC,ICnBjB,IAAIY,EAAc,QAAS,uDAAwD,EAC/EC,EAAO,IACPC,EAAS,IAKbF,EAAaC,EAAM,SAAUC,CAAO,EAKpC,OAAO,QAAUD",
  "names": ["require_main", "__commonJSMin", "exports", "module", "map2d", "x", "shape", "fcn", "thisArg", "S0", "S1", "i0", "i1", "x0", "y0", "y", "require_assign", "__commonJSMin", "exports", "module", "map2d", "x", "y", "shape", "fcn", "thisArg", "S0", "S1", "i0", "i1", "x0", "y0", "setReadOnly", "main", "assign"]
}
